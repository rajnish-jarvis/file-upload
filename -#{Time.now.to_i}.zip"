
[1mFrom:[0m /home/this/RubymineProjects/file-upload/app/controllers/attachements_controller.rb:51 AttachementsController#update:

    [1;34m42[0m: [32mdef[0m [1;34mupdate[0m
    [1;34m43[0m:   folder = [31m[1;31m"[0m[31m/home/this/Desktop/stuff_to_zip[1;31m"[0m[31m[0m
    [1;34m44[0m:   input_filenames = [[31m[1;31m'[0m[31mimage.jpg[1;31m'[0m[31m[0m, [31m[1;31m'[0m[31mdescription.txt[1;31m'[0m[31m[0m, [31m[1;31m'[0m[31mstats.csv[1;31m'[0m[31m[0m]
    [1;34m45[0m:   zipfile_name = [31m[1;31m"[0m[31m/home/this/Desktop/archive.zip[1;31m"[0m[31m[0m
    [1;34m46[0m:   [1;34;4mZip[0m::[1;34;4mFile[0m.open(zipfile_name, [35mcreate[0m: [1;36mtrue[0m) [32mdo[0m |zipfile|
    [1;34m47[0m:     input_filenames.each [32mdo[0m |filename|
    [1;34m48[0m:       [1;34m# Two arguments:[0m
    [1;34m49[0m:       [1;34m# - The name of the file as it will appear in the archive[0m
    [1;34m50[0m:       [1;34m# - The original file, including the path to find it[0m
 => [1;34m51[0m:       binding.pry
    [1;34m52[0m:       zipfile.add(filename, [1;34;4mFile[0m.join(folder, filename))
    [1;34m53[0m:     [32mend[0m
    [1;34m54[0m:     zipfile.get_output_stream([31m[1;31m"[0m[31mmyFile[1;31m"[0m[31m[0m) { |f| f.write [31m[1;31m"[0m[31mmyFile contains just this[1;31m"[0m[31m[0m }
    [1;34m55[0m:   [32mend[0m
    [1;34m56[0m:   [1;34m# respond_to do |format|[0m
    [1;34m57[0m:   [1;34m#   if @attachement.update(attachement_params)[0m
    [1;34m58[0m:   [1;34m#     @attachement.update_file_url(url_for(@attachement.file)) if @attachement.file.present?[0m
    [1;34m59[0m:   [1;34m#     format.html { redirect_to attachement_url(@attachement), notice: "Attachement was successfully updated." }[0m
    [1;34m60[0m:   [1;34m#     format.json { render :show, status: :ok, location: @attachement }[0m
    [1;34m61[0m:   [1;34m#   else[0m
    [1;34m62[0m:   [1;34m#     format.html { render :edit, status: :unprocessable_entity }[0m
    [1;34m63[0m:   [1;34m#     format.json { render json: @attachement.errors, status: :unprocessable_entity }[0m
    [1;34m64[0m:   [1;34m#   end[0m
    [1;34m65[0m:   [1;34m# end[0m
    [1;34m66[0m: [32mend[0m

